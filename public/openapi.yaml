openapi: 3.0.0
info:
  title: 'CSMobile API'
  description: 'API do sistema CSMobile'
  contact:
    email: fale_com_lopez@hotmail.com
  version: 1.0.0
servers:
  -
    url: 'https://csmobile.com.br/api'
    description: 'CSMobile Host'
paths:
  /api/v1/auth:
    post:
      tags:
        - auth
      description: 'Realiza a autenticação do usuário'
      operationId: 'Spa\Http\Controllers\Api\V1\AuthController::login'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: 'E-mail do usuário'
                  type: string
                  format: email
                password:
                  description: 'Senha do usuário'
                  type: string
                  format: password
              type: object
      responses:
        '401':
          description: 'Erro de autenticação'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: 'Response Ok'
          content:
            application/json:
              schema:
                properties:
                  data: { description: 'Response data', properties: { access_token: { description: 'O token de login do usuário', type: string }, expires_in: { description: 'Define o tempo de expiração do token', type: integer } }, type: object }
                type: object
  /api/v1/auth/logout:
    post:
      tags:
        - auth
      description: 'Realiza o logout do usuário'
      operationId: 'Spa\Http\Controllers\Api\V1\AuthController::logout'
      responses:
        '200':
          description: 'Response Ok'
      security:
        - bearer
  /api/v1/posts:
    get:
      tags:
        - posts
      description: 'Retorna os posts cadastroados para o associado'
      operationId: 'Spa\Http\Controllers\Api\V1\PostsController::index'
      responses:
        '200':
          description: 'Response Ok'
          content:
            application/json:
              schema:
                properties:
                  data: { description: 'Response data', properties: { posts: { items: { $ref: '#/components/schemas/Post' } } }, type: object }
                type: object
      security:
        - bearer
    post:
      tags:
        - posts
      description: 'Salva um novo post no banco de dados'
      operationId: 'Spa\Http\Controllers\Api\V1\PostsController::store'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '422':
          description: 'Erros de validação'
          $ref: '#components/responses/ErrorValidationResponse'
        '201':
          description: 'Post Criado'
          content:
            application/json:
              schema:
                properties:
                  meta: { description: 'Response metada', properties: { code: { description: 'Http response code', example: '201' }, message: { description: 'A resposta da requisição', example: 'O post foi criado' } }, type: object }
                  data: { description: 'Response data', properties: { post: { description: 'O post criado', $ref: '#/components/schemas/Post' } }, type: object }
                type: object
      security:
        - bearer
components:
  schemas:
    ErrorResponse:
      description: 'Retorna uma mensage de erro para o usuário'
      properties:
        meta:
          description: 'Defines response metadata'
          properties:
            code:
              description: 'Código da resposta Http'
              type: integer
            message:
              description: 'Mensagem de erro a ser exbida ao usuário'
              type: string
          type: object
      type: object
    Post:
      description: 'Define um post salvo no banco de dados'
      required:
        - title
        - text
        - user_id
      properties:
        id:
          description: 'Post ID'
          type: integer
        title:
          description: 'Título do post'
          type: string
        text:
          description: 'Conteúdo do post'
          type: string
        user_id:
          description: 'ID do usuário dono do post'
          type: integer
        publish_at:
          description: 'A data de publicação do post'
          type: string
          format: dateTime
        created_at:
          description: 'A data de criação do post'
          type: string
          format: dateTime
        updated_at:
          description: 'A data de atualização do post'
          type: string
          format: dateTime
      type: object
  responses:
    ErrorValidationResponse:
      description: 'Define a response contendo os dados de validação de formulários'
      content:
        application/json:
          schema:
            properties:
              message:
                description: 'Mensagem que informa que há erros de validação'
              errors:
                description: 'Define os erros em cada campo'
                properties:
                  field_name: { description: 'Nome do campo que foi validado', example: '[''Nome de usuário inválido'']' }
                type: object
            type: object
  securitySchemes:
    bearer:
      type: http
      bearerFormat: JWT
      scheme: bearer
